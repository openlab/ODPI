<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accountname" xml:space="preserve">
    <value>nom du compte</value>
  </data>
  <data name="AddTheDownloadedCertificate" xml:space="preserve">
    <value>Ajoutez le certificat téléchargé depuis la console d'administration Windows Azure. Cliquez &lt;a href="#" data-toggle="modal"
                            data-target="#add-certificate" id="cert-doc-link"&gt;ici&lt;/a&gt; pour plus de détails sur l'ajout de certificats.</value>
  </data>
  <data name="AutomatedInstaller" xml:space="preserve">
    <value>Installeur Automatisé</value>
  </data>
  <data name="AzureConfig" xml:space="preserve">
    <value>Configuration d'Azure</value>
  </data>
  <data name="AzureInfo" xml:space="preserve">
    <value>Informations Azure</value>
  </data>
  <data name="ClickToSeeHow" xml:space="preserve">
    <value>Cliquez pour voir comment</value>
  </data>
  <data name="ConfigureComponents" xml:space="preserve">
    <value>Configuration des Composants</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continuer</value>
  </data>
  <data name="FinalizeInstallProcedure" xml:space="preserve">
    <value>Finalisation de la procédure d'installation</value>
  </data>
  <data name="FinallyWeRequireTheCredentials" xml:space="preserve">
    <value>Enfin nous avons besoin des identifiants de votre compte de stockage Azure pour la souscription sur laquelle nous téléchargerons puis déploierons le(s) paquet(s). Si vous n'avez pas encore créé de compte de stockage, cliquez &lt;a href="#" data-toggle="modal" data-target="#createTableStorage"&gt;ici&lt;/a&gt; pour plus de détails.</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Précédent</value>
  </data>
  <data name="IfYouWouldRatherUseManualInstall" xml:space="preserve">
    <value>Si vous préférez utiliser l'installation manuelle cliquez simplement sur le bouton ignorer ci-dessous.&lt;br /&gt;
Si vous préférez utiliser l'installation automatisée veuillez suivre les instructions suivantes.</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Installation</value>
  </data>
  <data name="InstallationTypes" xml:space="preserve">
    <value>Types d'installation</value>
  </data>
  <data name="LongKeyString" xml:space="preserve">
    <value>clé</value>
  </data>
  <data name="ManualInstaller" xml:space="preserve">
    <value>Installeur Manuel</value>
  </data>
  <data name="NoteTheInstallerCanAutomatically" xml:space="preserve">
    <value>&lt;strong&gt;NOTE :&lt;/strong&gt; L'installeur automatisé peut automatiquement déployer votre/vos paquet(s) à votre place cependant vous DEVEZ installer un certificat généré par ODPI dans la console de gestion Azure. Le processus de déploiement vérifiera que le certificat est bien présent sur votre compte Azure et ne procèdera pas à l'étape suivante tant que celui-ci n'est pas installé.</value>
  </data>
  <data name="ODPICanAutomaticallyDeploy" xml:space="preserve">
    <value>ODPI peut automatiquement déployer votre/vos paquet(s) à votre place mais vous devez d'abord suivre les étapes suivantes.</value>
  </data>
  <data name="ODPIHasTwoWays" xml:space="preserve">
    <value>ODPI possède 2 méthodes pour configurer et installer vos composants sur la plateforme Windows Azure</value>
  </data>
  <data name="OnceYouHaveDownloadedAndUploaded" xml:space="preserve">
    <value>Une fois le certificat téléchargé et ajouté entrez votre ID d'abonnement disponible depuis la console d'administration. Cliquez &lt;a href="#" data-toggle="modal" data-target="#subscriptionIdHelp"&gt;ici&lt;/a&gt; pour plus de détails sur le moyen d'obtenir votre ID d'abonnement.</value>
  </data>
  <data name="PrimaryAccessKey" xml:space="preserve">
    <value>Clé d'accès primaire</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progression :</value>
  </data>
  <data name="SelectComponentsToInstall" xml:space="preserve">
    <value>Sélection des composants à installer</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Ignorer</value>
  </data>
  <data name="StartByDownloading" xml:space="preserve">
    <value>Commencez par télécharger ce &lt;a id="certlink" href="/Auto/Certificate?fileName="&gt;Certificat Généré&lt;/a&gt; et sauvegardez-le sur votre ordinateur local. Mémorisez l'endroit où vous l'enregistrez.</value>
  </data>
  <data name="StorageAccountName" xml:space="preserve">
    <value>Nom du Compte de Stockage</value>
  </data>
  <data name="SubscriptionId" xml:space="preserve">
    <value>ID d'abonnement</value>
  </data>
  <data name="SubscriptionKeyForAzure" xml:space="preserve">
    <value>clé d'abonnement azure</value>
  </data>
  <data name="TheAutomatedInstallerWillAllow" xml:space="preserve">
    <value>L'installeur automatisé vous permettra de vérifier toute la configuration avant l'installation du/des paquets pour vous faire économiser du temps.</value>
  </data>
  <data name="TheManualInstallerIsTheAlternative" xml:space="preserve">
    <value>L'installeur manuel est une alternative pour utiliser ODPI dans laquelle nous n'avons pas à connaître les informations relatives à votre instance Azure. La contrepartie de cette méthode est que vous devrez vous assurer que tous les éléments de configuration sont corrects avant de télécharger manuellement et de déployer les paquets en utilisant la console de gestion Windows Azure.</value>
  </data>
</root>