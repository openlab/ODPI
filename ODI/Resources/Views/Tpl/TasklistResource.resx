<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BeforeYouStart" xml:space="preserve">
    <value>Before You Start</value>
  </data>
  <data name="BeforeYouStartTheProcess" xml:space="preserve">
    <value>Before you start the process of installing any of the products included with Open
        Data Platform Installer there are a few pre-requisites required before using the
        tool. &lt;a id="showMore"&gt;Show More&lt;/a&gt;</value>
  </data>
  <data name="ConfigureComponents" xml:space="preserve">
    <value>Configure Components</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="FinalizeInstallProcedure" xml:space="preserve">
    <value>Finalize install procedure</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="HostedService" xml:space="preserve">
    <value>Hosted Service</value>
  </data>
  <data name="IfYouDontAlreadyHaveAWindowsAzure" xml:space="preserve">
    <value>If you don’t already have a Windows Azure account you can create one at &lt;a href="http://www.windowsazure.com"
                            target="_blank"&gt;www.windowsazure.com&lt;/a&gt;. Here you will find all appropriate
                        information and steps required to create an account.</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="ManagementCertificates" xml:space="preserve">
    <value>Management Certificates</value>
  </data>
  <data name="OnceYourAccountIsCreated" xml:space="preserve">
    <value>Once your account is created you will need to create a Hosted Service under your
                    Windows Azure subscription to deploy the products to. This Hosted Service must be
                    empty or we cannot deploy to it using the Open Data Platform Installer.</value>
  </data>
  <data name="OpenDataPlatformInstalled" xml:space="preserve">
    <value>Open Data Platform Installer for Windows Azure</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress:</value>
  </data>
  <data name="SelectComponentsToInstall" xml:space="preserve">
    <value>Select components to install</value>
  </data>
  <data name="StorageAccount" xml:space="preserve">
    <value>Storage Account</value>
  </data>
  <data name="TheOpenDataPlatformInstallerODPI" xml:space="preserve">
    <value>The Open Data Platform Installer (ODPI) will allow even non-technical folks to get
        a customized collection of Open Data applications up and running on Windows Azure
        by filling out a few details.</value>
  </data>
  <data name="TheOpenDataPlatformInstallerRequires" xml:space="preserve">
    <value>The Open Data Platform Installer requires the use of a Storage Account to temporarily
                        store packages while deploying. These packages will be deleted, but the storage
                        account will remain in place. We'll let you know when you need these details but
                        if you want to create one now click &lt;a href="#" data-toggle="modal" data-target="#createTableStorage"&gt;
                            here&lt;/a&gt;
                    for details on how to create one.</value>
  </data>
  <data name="ToAllowOpenDataPlatformInstaller" xml:space="preserve">
    <value>To allow the Open Data Platform Installer access to your Windows Azure account,
                        you will be required to add temporary certificates to your Windows Azure account.
                        Don’t worry, we automatically create the certificates, we’ll show you how to add
                        the certificates to your Azure account when the time is right.</value>
  </data>
  <data name="WindowsAzureAccount" xml:space="preserve">
    <value>Windows Azure Account</value>
  </data>
  <data name="YouMustAlsoCreate" xml:space="preserve">
    <value>You must also create a separate hosted service for every product you install. Please
                    see, &lt;a href="#" data-toggle="modal" data-target="#CreateHostedService" rel="tooltip"
                        data-original-title="Click to see how"&gt;How to Create a Hosted Service for more details.&lt;/a&gt;</value>
  </data>
</root>