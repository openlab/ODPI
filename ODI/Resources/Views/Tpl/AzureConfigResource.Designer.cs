//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODI.Resources.Views.Tpl {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AzureConfigResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AzureConfigResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ODI.Resources.Views.Tpl.AzureConfigResource", typeof(AzureConfigResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to accountname.
        /// </summary>
        public static string Accountname {
            get {
                return ResourceManager.GetString("Accountname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add the downloaded certificate to your Windows Azure Managment Console. Click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot;
        ///                            data-target=&quot;#add-certificate&quot; id=&quot;cert-doc-link&quot;&gt;here&lt;/a&gt; for details on uploading the certificated..
        /// </summary>
        public static string AddTheDownloadedCertificate {
            get {
                return ResourceManager.GetString("AddTheDownloadedCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automated Installer.
        /// </summary>
        public static string AutomatedInstaller {
            get {
                return ResourceManager.GetString("AutomatedInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Config.
        /// </summary>
        public static string AzureConfig {
            get {
                return ResourceManager.GetString("AzureConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Info.
        /// </summary>
        public static string AzureInfo {
            get {
                return ResourceManager.GetString("AzureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to see how.
        /// </summary>
        public static string ClickToSeeHow {
            get {
                return ResourceManager.GetString("ClickToSeeHow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Components.
        /// </summary>
        public static string ConfigureComponents {
            get {
                return ResourceManager.GetString("ConfigureComponents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue.
        /// </summary>
        public static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finalize install procedure.
        /// </summary>
        public static string FinalizeInstallProcedure {
            get {
                return ResourceManager.GetString("FinalizeInstallProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finally we require the credentials for your Azure Table Storage for the subscription
        ///                    that we will be deploying to so that we can move the packages properly to Azure
        ///                    to be deployed.  If you have not created a table storage account click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot; data-target=&quot;#createTableStorage&quot;&gt;here&lt;/a&gt; for details on how to create one..
        /// </summary>
        public static string FinallyWeRequireTheCredentials {
            get {
                return ResourceManager.GetString("FinallyWeRequireTheCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Back.
        /// </summary>
        public static string GoBack {
            get {
                return ResourceManager.GetString("GoBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you would rather use the manual install, simply click the skip button below.
        ///                If you would like to use the automated installation please follow the instructions
        ///                below..
        /// </summary>
        public static string IfYouWouldRatherUseManualInstall {
            get {
                return ResourceManager.GetString("IfYouWouldRatherUseManualInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Types.
        /// </summary>
        public static string InstallationTypes {
            get {
                return ResourceManager.GetString("InstallationTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to long key string.
        /// </summary>
        public static string LongKeyString {
            get {
                return ResourceManager.GetString("LongKeyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual Installer.
        /// </summary>
        public static string ManualInstaller {
            get {
                return ResourceManager.GetString("ManualInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;strong&gt;NOTE:&lt;/strong&gt; The Installer can automatically deploy your package(s) for
        ///                you, but you MUST install a generated certificate into the Azure Management Console.
        ///                The deploy process will check your Azure account for a certificate, and will not
        ///                move on to the next step unless there’s a certificate..
        /// </summary>
        public static string NoteTheInstallerCanAutomatically {
            get {
                return ResourceManager.GetString("NoteTheInstallerCanAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ODPI can automatically deploy your package(s) for you but you first must follow these steps..
        /// </summary>
        public static string ODPICanAutomaticallyDeploy {
            get {
                return ResourceManager.GetString("ODPICanAutomaticallyDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ODPI has two ways to configure and install your components onto the Windows Azure
        ///                platform..
        /// </summary>
        public static string ODPIHasTwoWays {
            get {
                return ResourceManager.GetString("ODPIHasTwoWays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once you have downloaded and uploaded the certificate, enter your Subscription ID
        ///                    found on the Management Console.  Click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot; data-target=&quot;#subscriptionIdHelp&quot;&gt;here&lt;/a&gt; for details on getting your subscription ID..
        /// </summary>
        public static string OnceYouHaveDownloadedAndUploaded {
            get {
                return ResourceManager.GetString("OnceYouHaveDownloadedAndUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Access Key.
        /// </summary>
        public static string PrimaryAccessKey {
            get {
                return ResourceManager.GetString("PrimaryAccessKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress:.
        /// </summary>
        public static string Progress {
            get {
                return ResourceManager.GetString("Progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select components to install.
        /// </summary>
        public static string SelectComponentsToInstall {
            get {
                return ResourceManager.GetString("SelectComponentsToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip.
        /// </summary>
        public static string Skip {
            get {
                return ResourceManager.GetString("Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start by downloading this &lt;a id=&quot;certlink&quot; href=&quot;/Auto/Certificate?fileName=&quot;&gt;Generated
        ///                        Certificate&lt;/a&gt; and saving it on your local computer.  Remember the location you saved it to..
        /// </summary>
        public static string StartByDownloading {
            get {
                return ResourceManager.GetString("StartByDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage Account Name.
        /// </summary>
        public static string StorageAccountName {
            get {
                return ResourceManager.GetString("StorageAccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscription Id.
        /// </summary>
        public static string SubscriptionId {
            get {
                return ResourceManager.GetString("SubscriptionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to subscription key for azure.
        /// </summary>
        public static string SubscriptionKeyForAzure {
            get {
                return ResourceManager.GetString("SubscriptionKeyForAzure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Automated installer will allow you to double check all of your configuration
        ///                prior to Automatically installing the package to save you the most time..
        /// </summary>
        public static string TheAutomatedInstallerWillAllow {
            get {
                return ResourceManager.GetString("TheAutomatedInstallerWillAllow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Manual installer is the alternative means for using ODPI, where we never need
        ///                to know anything about your Azure instance. The drawback to this method is that
        ///                you will have to ensure that all of your configuration is correct ahead of time
        ///                as well as manually upload and deploy the packages using the Azure Managment
        ///                Console..
        /// </summary>
        public static string TheManualInstallerIsTheAlternative {
            get {
                return ResourceManager.GetString("TheManualInstallerIsTheAlternative", resourceCulture);
            }
        }
    }
}
